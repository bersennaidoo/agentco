// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package models

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	SessionTokenScopes = "SessionToken.Scopes"
)

// Defines values for JobActivities.
const (
	Boarding JobActivities = "boarding"
	Daycare  JobActivities = "daycare"
	Dropin   JobActivities = "dropin"
	Sitting  JobActivities = "sitting"
	Walk     JobActivities = "walk"
)

// Defines values for JobApplicationStatus.
const (
	ACCEPTED JobApplicationStatus = "ACCEPTED"
	APPLYING JobApplicationStatus = "APPLYING"
	DENIED   JobApplicationStatus = "DENIED"
)

// Defines values for JobDogSize.
const (
	Large  JobDogSize = "large"
	Medium JobDogSize = "medium"
	Small  JobDogSize = "small"
)

// Defines values for UserRoles.
const (
	Admin     UserRoles = "Admin"
	PetOwner  UserRoles = "PetOwner"
	PetSitter UserRoles = "PetSitter"
)

// Job defines model for Job.
type Job struct {
	Activities   []JobActivities   `json:"activities"`
	Applications *[]JobApplication `json:"applications,omitempty"`
	CreatedAt    *time.Time        `json:"created_at,omitempty"`

	// CreatorUserId The user who posted this job.
	CreatorUserId *string `json:"creator_user_id,omitempty"`
	Description   string  `json:"description"`
	Dog           *JobDog `json:"dog,omitempty"`

	// EndsAt The date and time when this job ends.
	EndsAt time.Time `json:"ends_at"`
	Id     *string   `json:"id,omitempty"`

	// StartsAt The date and time when this job starts.
	StartsAt  time.Time  `json:"starts_at"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// WorkerUserId When the job is open, null. When the job is filled, the user who is working on it.
	WorkerUserId *string `json:"worker_user_id"`
}

// JobActivities defines model for Job.Activities.
type JobActivities string

// JobApplication defines model for JobApplication.
type JobApplication struct {
	// Id Job application id.
	Id *string `json:"id,omitempty"`

	// JobId Job id
	JobId  *string               `json:"job_id,omitempty"`
	Status *JobApplicationStatus `json:"status,omitempty"`

	// UserId Id of user requesting job
	UserId *string `json:"user_id,omitempty"`
}

// JobApplicationStatus defines model for JobApplication.Status.
type JobApplicationStatus string

// JobDog defines model for Job_dog.
type JobDog struct {
	Breed    string     `json:"breed"`
	Name     *string    `json:"name,omitempty"`
	Size     JobDogSize `json:"size"`
	YearsOld int        `json:"years_old"`
}

// JobDogSize defines model for JobDog.Size.
type JobDogSize string

// Session defines model for Session.
type Session struct {
	AuthHeader *string `json:"auth_header,omitempty"`
	UserId     *string `json:"user_id,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time          `json:"created_at,omitempty"`
	Email     openapi_types.Email `json:"email"`
	FullName  string              `json:"full_name"`
	Id        *string             `json:"id,omitempty"`
	Password  *string             `json:"password,omitempty"`
	Roles     []UserRoles         `json:"roles"`
	UpdatedAt *time.Time          `json:"updated_at,omitempty"`
}

// UserRoles defines model for User.Roles.
type UserRoles string

// InlineResponse200 defines model for inline_response_200.
type InlineResponse200 struct {
	// HasMore Indicates that more items are available and can be retrieved with different offset and limit parameters.
	HasMore *bool  `json:"has_more,omitempty"`
	Items   *[]Job `json:"items,omitempty"`

	// TotalItems The total number of items, regardless of how many this response includes.
	TotalItems *int `json:"total_items,omitempty"`
}

// GetJobsParams defines parameters for GetJobs.
type GetJobsParams struct {
	// Limit Limits the number of results the endpoint returns.
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Skips these many items from the response.
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// StartSessionJSONBody defines parameters for StartSession.
type StartSessionJSONBody struct {
	Email    *string `json:"email,omitempty"`
	Password *string `json:"password,omitempty"`
}

// UpdateJobApplicationJSONRequestBody defines body for UpdateJobApplication for application/json ContentType.
type UpdateJobApplicationJSONRequestBody = JobApplication

// PostJobsJSONRequestBody defines body for PostJobs for application/json ContentType.
type PostJobsJSONRequestBody = Job

// PutJobsIdJSONRequestBody defines body for PutJobsId for application/json ContentType.
type PutJobsIdJSONRequestBody = Job

// CreateJobApplicationJSONRequestBody defines body for CreateJobApplication for application/json ContentType.
type CreateJobApplicationJSONRequestBody = JobApplication

// StartSessionJSONRequestBody defines body for StartSession for application/json ContentType.
type StartSessionJSONRequestBody StartSessionJSONBody

// PostUsersJSONRequestBody defines body for PostUsers for application/json ContentType.
type PostUsersJSONRequestBody = User

// PutUsersIdJSONRequestBody defines body for PutUsersId for application/json ContentType.
type PutUsersIdJSONRequestBody = User
